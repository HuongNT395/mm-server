image: asia.gcr.io/chatops2020/chatops-env:02
stages:
  - make-chatops-packages
  - build-images
  - deploy_stg
  - deploy_stg_2
  - deploy_demo
  
variables:
  HOME_CI: /builds/nal/mmc-server
  GO_ROOT: /usr/local/go/src/github.com/mattermost
  
Make Chatops Package:
  stage: make-chatops-packages
  script:
    - mkdir -p ${GO_ROOT}/mattermost-server
    - cp -r * ${GO_ROOT}/mattermost-server
    - cd /tmp && git clone https://oauth2:$ACCESS_TOKEN@gitlab.nal.vn/nal/mmc-webapp.git
    - cd /tmp/mmc-webapp
    - git checkout develop-5.27
    - mkdir -p ${GO_ROOT}/mattermost-webapp
    - cp -r * ${GO_ROOT}/mattermost-webapp/
    - cd ${GO_ROOT}/mattermost-webapp
    - make build
    - make package
    - cp -a mattermost-webapp.tar.gz ${HOME_CI}
    #Build Server
    - cd ${GO_ROOT}/mattermost-server/
    - mv template_config.json config/config.json
    - sed -i "s/.*build-version.*/    ${BUILD}/g" build-version.json
    - make build
    - make package
    - cp -a dist/mattermost-team-linux-amd64.tar.gz ${HOME_CI}
  artifacts:
    paths:
      - mattermost-team-linux-amd64.tar.gz
      - mattermost-webapp.tar.gz
    expire_in: 1 day
  only:
    - release-5.27
    - tags
  tags:
    - chatops-gitlab-runner
    
Build Chatops Images 5.27.0:
  stage: build-images
  script:
    - HASH=$(git rev-parse --short HEAD)
    - cp mattermost-team-linux-amd64.tar.gz mattermost-webapp.tar.gz /opt/
    - cd /opt/
    - tar -zxvf mattermost-team-linux-amd64.tar.gz
    - cp -rf /opt/mattermost-webapp.tar.gz /opt/mattermost
    - cd /opt/mattermost
    - tar -zxvf mattermost-webapp.tar.gz
    - cp -rf ${HOME_CI}/cicd/* /opt/mattermost
    - id -u mattermost &>/dev/null || useradd --system --user-group mattermost
    - chown -R mattermost:mattermost /opt/mattermost
    - chmod -R g+w /opt/mattermost
    - BUILD=$(echo \"build-version\"\:\ \"$HASH\")
    - cat /tmp/Chatops-0af0d8d3b36f.json | docker login -u _json_key --password-stdin https://asia.gcr.io
    - docker build -t asia.gcr.io/chatops2020/nal-mmc-5.27:$HASH .
    - docker push asia.gcr.io/chatops2020/nal-mmc-5.27:$HASH
  only:
    - release-5.27
    - tags
  tags:
    - chatops-gitlab-runner


Deploy Staging:
  stage: deploy_stg
  dependencies: []
  script:
    - BUILD=$(date +%Y%m%d)
    - HASH=$(git rev-parse --short HEAD)
    - cd ~/nal-infra-gcp && git pull
    - sh ~/nal-infra-gcp/chatops-stg/connect-ci.sh
    - cd ~/nal-infra-gcp/chatops-stg/mmc-stg-nal-vn/
    - pwd
    - sed -i "s/nal-mmc-5.27.*/nal-mmc-5.27:${HASH}/g" dl_mmc-stg-nal-vn.yml
    - /home/gitlab-runner/google-cloud-sdk/bin/kubectl delete -f dl_mmc-stg-nal-vn.yml
    - /home/gitlab-runner/google-cloud-sdk/bin/kubectl create -f dl_mmc-stg-nal-vn.yml
    - git add dl_mmc-stg-nal-vn.yml
    - git commit -m "Deploy chatops $HASH" || true
    - git push origin master || true
    - mkdir -p ~/chatops-tracker && cd ~/chatops-tracker
    - git clone git@gitlab.nal.vn:nal/chatops.git || true
    - cd chatops && git pull
    - git checkout .
    - VERSION="5.27.0-$HASH-$BUILD"
    - STATUS=$(/root/miniconda3/bin/python3 devops.py -i  ChatOps-v1.27.27.yml -t core -c server -p version commit -v $VERSION $HASH)
    - BASEVS=$(echo base_version:\ ${STATUS})
    - sed -i "s/.*base_version.*/${BASEVS}/g" mmc-stg.nal.vn.yml
    - git add ChatOps-v1.27.27.yml mmc-stg.nal.vn.yml
    - git commit -m "$STATUS"
    - git push
  only:
  - release-5.27
  tags:
  - chatops-deploy-runner
  
Deploy Staging-2:
  stage: deploy_stg_2
  dependencies: []
  script:
    - BUILD=$(date +%Y%m%d)
    - HASH=$(git rev-parse --short HEAD)
    - cd ~/nal-infra-gcp && git pull
    - sh ~/nal-infra-gcp/chatops-stg/connect-ci.sh
    - cd ~/nal-infra-gcp/chatops-stg/aichat-standalone/
    - pwd
    - sed -i "s/nal-mmc-5.27.*/nal-mmc-5.27:${HASH}/g" deployment-client-standalone-chatops.vn.yml
    - /home/gitlab-runner/google-cloud-sdk/bin/kubectl delete -f deployment-client-standalone-chatops.vn.yml
    - /home/gitlab-runner/google-cloud-sdk/bin/kubectl create -f deployment-client-standalone-chatops.vn.yml
    - git add deployment-client-standalone-chatops.vn.yml
    - git commit -m "Deploy chatops $HASH" || true
    - git push origin master || true
    - mkdir -p ~/chatops-tracker && cd ~/chatops-tracker
    - git clone git@gitlab.nal.vn:nal/chatops.git || true
    - cd chatops && git pull
    - git checkout .
    - VERSION="5.27.0-$HASH-$BUILD"
    - STATUS=$(/root/miniconda3/bin/python3 devops.py -i ChatOps.yml -t core -c server -p version commit -v $VERSION $HASH)
    - BASEVS=$(echo base_version:\ ${STATUS})
    - sed -i "s/.*base_version.*/${BASEVS}/g" mmc-stg.nal.vn.yml
    - git add ChatOps.yml mmc-stg.nal.vn.yml
    - git commit -m "$STATUS"
    - git push
  only:
  - release-5.27
  tags:
  - chatops-deploy-runner

Deploy demo.chatops.vn:
  stage: deploy_demo
  dependencies: []
  script:
    - HASH=$(git rev-parse --short HEAD)
    - echo $HASH
    - cd ~/nal-infra-gcp && git pull
    - sh ~/nal-infra-gcp/chatops/k8s/connect.sh
    - cd ~/nal-infra-gcp/chatops/k8s/deployments/chatops
    - pwd
    - sed -i "s/nal-mmc-5.27.*/nal-mmc-5.27:${HASH}/g" mmc-demo-chatops-vn.yml
    - /home/gitlab-runner/google-cloud-sdk/bin/kubectl delete -f mmc-demo-chatops-vn.yml -n chatops
    - /home/gitlab-runner/google-cloud-sdk/bin/kubectl create -f mmc-demo-chatops-vn.yml -n chatops
    - git add mmc-demo-chatops-vn.yml
    - git commit -m "Deploy Demo.chatops.vn $HASH" || true
    - git push origin master || true
    - mkdir -p ~/chatops-tracker && cd ~/chatops-tracker
    - git clone git@gitlab.nal.vn:nal/chatops.git || true
    - cd chatops && git pull
    - git checkout .
    - VERSION="5.27.0-$HASH-$BUILD"
    - STATUS=$(/root/miniconda3/bin/python3 devops.py -i  ChatOps-v1.27.26.yml -t core -c server -p version commit -v $VERSION $HASH)
    - BASEVS=$(echo base_version:\ ${STATUS})
    - sed -i "s/.*base_version.*/${BASEVS}/g" mmc-stg.nal.vn.yml
    - git add ChatOps-v1.27.26.yml demo.chatops.vn.yml
    - git commit -m "$STATUS"
    - git push
  when: manual
  only:
  - release-5.27
  tags:
  - chatops-deploy-runner
